======================
100-matrix_mul
======================

Matrix multiplication  module is the unit test that verifies matrix mul

=====================

::

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> m_a = [
    ... [1, 2],
    ... [3, 4],
    ... ]
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    [[7, 10], [15, 22]]

It also works with the second matrix

::

    >>> m_a = [[1, 2]]
    >>> m_b = [
    ... [3, 4],
    ... [5, 6]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    [[13, 16]]

It also works with float numbers

::

    >>> m_a = [
    ... [1.5, 2.5, 1.2],
    ... [3.6, -3.3, 2.2]
    ... ]
    >>> m_b = [
    ... [1.0, 2.1],
    ... [2.9, 2.4],
    ... [3.2, -2.4]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    [[12.59, 6.2700000000000005], [1.070000000000002, -5.639999999999999]]

It also works with integers and floats

::

    >>> m_a = [
    ... [1.2, 5.5, 6.2],
    ... [4.66, 12.3, -9.2]
    ... ]
    >>> m_b = [
    ... [5.0, 3.3],
    ... [-2.9, 4.4],
    ... [7.2, 4.4]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    [[34.69, 55.44000000000001], [-78.61, 29.018000000000008]]

TypeError empty values in m_a matrix

::

    >>> print(matrix_mul([], [[1, 2]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

TypeError empty values in m_b matrix

::

    >>> print(matrix_mul([[]], []))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

TypeError m_a is not a list

::

    >>> print(matrix_mul("string", [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

TypeError m_b is not a list

::

    >>> print(matrix_mul([[1, 2]], "string"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

TypeError m_a and m_b are not lists

::

    >>> print(matrix_mul("string1", "string2"))
    Traceback (most recent call last):
    TypeError: m_a must be a list

TypeError m_a and m_b are None

::

    >>> print(matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: m_a must be a list

TypeError: m_a is a list but not a list of list

::

    >>> print(matrix_mul([1, 2], [3, 4]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

TypeError adding other type rather than int or float into the list

::

    >>> print(matrix_mul([[1, "string"]], [[{"a": 1}, 3.2]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

::
